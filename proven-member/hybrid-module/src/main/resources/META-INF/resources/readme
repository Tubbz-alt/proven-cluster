----------------------
Provenance Environment (ProvEn) Server
----------------------


------------
Installation
------------

+ Untar distribution 
+ Edit ".proven_config" file to modify default configuration settings
+ Run "proven start" command to start the ProvEn server  -or-
  Run "proven" without any arguments to see usage description
+ By default application log messages are stored in "proven_log" file on startup


------------
Service documentation
------------
REST services exposed by ProvEn are documented with Swagger-UI.

Use the following URL to access the service documentation 
default service port 28080 is assumed:

  http://<host>:28080/proven/api 

If service port has been modified in .proven_config file, use the 
following url to access service documentation:

  http://<host>:<new_port>/proven/api/?url=http://<host>:<new_port>/proven/rest/swagger.json 


------------
Examples
------------

+ Example provenance message; can be used in POST /v1/repository/message/client/{domain}/{messageName} service:

	{
		"hasProvenance": {
			"@type": "provenTest:TestMessage",
			"hasApplicationName": "Test Application",
			"@id": "provenTest:1_TestMessage"
		},
		"keywords": [],
		"@type": "proven:ProvenanceMessage",
		"name": "TestMessage",
		"description": "",
		"hasProvenanceMetric": [],
		"@id": "proven:1_ProvenanceMessage",
		"@context": {
			"hasApplicationName": {
				"@type": "xsd:string",
				"@id": "wfpp:hasApplicationName"
			},
			"hasProvenance": {
				"@type": "@id",
				"@id": "proven:hasProvenance"
			},
			"proven": "http://provenance.pnnl.gov/ns/proven#",
			"provenTest": "http://provenance.pnnl.gov/ns/provenTest#",
			"wfpp": "http://wfpp.pnnl.gov#"
		}
	}


+ Example SPARQL query to select all statements from a provided named graph (i.e. domain context).
  The example query uses named graph from example message above.  This example can be
  used in GET /v1/repository/sparql service:

	SELECT ?subject ?predicate ?object
	WHERE {
	  GRAPH <http://provenance.pnnl.gov/ns/proven#provenTesting>
	  {
	    ?subject ?predicate ?object
	  }
	}





